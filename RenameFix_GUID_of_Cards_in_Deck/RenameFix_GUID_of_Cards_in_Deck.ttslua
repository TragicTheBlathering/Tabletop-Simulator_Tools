function onLoad()
    createActivationButton()
end

function runRenameCard(drawnCard)
    --print(drawnCard.getName())
    local name = drawnCard.getName()--:sub(1, -2) --(remove last char)
    --drawnCard.setName(name:gsub("Common", "Common.Item.AH"))
    --drawnCard.setName(name:gsub("Item", "Item.Tome.AH"))
    --drawnCard.setName(name:gsub("Common", "Common.Item.Physical.Weapon.AH"))
    --drawnCard.setName(name:gsub("Common", "Common.Item.Magical.Weapon.AH"))


    --drawnCard.setName(name:gsub("Unique", "Unique.Item.AH"))
    --drawnCard.setName(name:gsub("Unique", "Unique.Item.Tome.AH"))
    --drawnCard.setName(name:gsub("Unique", "Unique.Item.Magical.Weapon.AH"))

    --drawnCard.setName(name:gsub("Spell", "Spell.AH"))
    --drawnCard.setName(name:gsub("Spell", "Spell.Item.Magical.AH"))
    --drawnCard.setName(name:gsub("Spell.Item.Magical.", "Spell.Magical."))

    --drawnCard.setName(name:gsub("Allies", "Ally.AH"))

    --drawnCard.setName(name:sub(1, -14)..'_(Skill.MH)')
    --drawnCard.setName(name..'_(Skill.AH.MH)')
    --drawnCard.setName(name..'_(ExhibitE.CotDP.MH)')
    --drawnCard.setName(name..'_(ExhibitI.CotDP.MH)')

    --drawnCard.setName('Blessing / Curse')

    --drawnCard.setName('Bank Loan')
    --drawnCard.setName('Sheldon Gang Membership')
    --drawnCard.setName('Silver Twilight Lodge Membership')
    --drawnCard.setName('\"One of a Thousand\" Cult Membership')

    --drawnCard.setName('Retainer')

    --drawnCard.setName(name..'_(Corruption.Mild.BGoTW)')
    --drawnCard.setName(name..'_(Corruption.Heavy.BGoTW)')

    --drawnCard.setName(name..'_(Blight.KiY.MH)')

    --drawnCard.setName(name:gsub("Injury", "Injury.DH"))--.MH"))
    --drawnCard.setName(name:gsub("Madness", "Madness.DH"))--.MH"))

    --drawnCard.setName('Blessing of Nodens_(MH_DH)')--.MH"))
    --drawnCard.setName(name..'_(MH-BGotW)')--.MH"))

    --drawnCard.setName("_(LaTT)")--.MH"))

    --drawnCard.setName(name:gsub("MH.", "MH-"))--.MH"))

    --drawnCard.setName("Miskatonic Univercity_(MH)")--.MH"))

    --drawnCard.setName(name:gsub(".MH%)", ".MH-BGoTW)"))

    --drawnCard.setName("Vision of Hypnos_(MH-KH.DH)")--.MH"))

    --drawnCard.setName(name:gsub("LaTT.MH", "MH-LaTT"))--.MH"))
    --drawnCard.setName('Dunwich Horror Combat Card_(MH-DH)')--.MH"))
    --drawnCard.setName(name:gsub("-DH", "-KH"))--.MH"))
    --drawnCard.setName('South Shore_(MH-KH)')--.MH"))

    drawnCard.setName(name:gsub("Battle Condition", "Epic Battle"))--.MH"))

-- %( %)

--------------------------------------------------------------------------------
    drawnCard.setDescription(addDescription())
    addTagsToCard(drawnCard)
    drawnCard.tooltip=false
    print(drawnCard.getName())--..' : '..drawnCard.getDescription())
end

function addDescription()
    local desc = {
    --'Spell',
    --'Common Item'
    --'Unique Item'
    --'Ally',
    --'Skill',
    --'Bank Loan',
    --'   - Tome',
    --'   - Magical Weapon',
    --'   - Physical Weapon',
    --'   - Magical Spell',
    --'   - Spell',
    --'\n(Arkham Horror)'
    --'\n(The King in Yellow)',
    --'\n(Innsmouth Horror)',
    --'\n(Dunwich Horror)',
    --'\n(Black Goat of the Woods)',
    --'\n(The Lurker at the Threshold)',

    '(Miskatonic Horror)'
    }

    local line = ''
    for k,v in ipairs(desc) do
        line = line..v..'\n'
    end
    return line
end

function addTagsToCard(c)
    local tags = {
    'DiscardObject',
    --'ID_CommonItem',
    --'ID_UniqueItem',
    --'ID_Spell',
    --'ID_Ally',
    --'ID_Skill',
    --'ID_DeputyOA',
    --'ID_BankLoan',
    --'ID_MemberSheldon',
    --'ID_MemberSilver',
    --'ID_Member1000Cult',
    --'ID_Retainer',
    --'ID_Condition',
    --'ID_Injury',
    --'ID_Madness',
    --'ID_ExhibitEncounter',
    --'ID_ExhibitI',
    --'ID_Blight',
    --'ID_BlessingOfNodens',
    --'ID_CultEncounter',
    --'ID_Student',
    --'ID_Looks',
    --'ID_Reckoning',
    --'ID_VisionOfHypnos',
    --'EB_Red',
    'EB_Green',


    --'ID_InnerBeast',
    --'ID_ThirdEye',
    --'ID_Madness',
    --'ID_Corruption',
    --'ID_StoryTask',
    --'ID_StoryConclusion',
    --'ID_StoryTask',
    --'ID_Relationship',
    --'Corruption_Mild',
    --'Corruption_Heavy',
    --'ID_CorruptionGREEN',
    --'Curse',
    --'Blessing',
    --'Tome',
    --'Weapon',
    --'Physical',
    --'Magical',
    --'Effect',
    --'Spell',
    --'Upkeep_Forced',
    --'Upkeep_May',
    'MiskatonicHorror'

    }
    table.sort(tags)
    c.setTags(tags)
end

--Activated by button press
function click_fixDeck()
    local func_findDeck = function(o) return o.tag=="Deck" end
    local deckList = findInRadiusBy(self.getPosition(), 2, func_findDeck)
    if #deckList == 0 then
        broadcastToAll("ERROR: No deck found on device.", {0.9,0.2,0.2})
    else
        self.clearButtons()
        spawnAllCards(deckList[1])
    end
end

--Draws all cards into a vertical line, locked into place
--Lets them all fall back down after they are done being drawn
function spawnAllCards(deck)
    function spawnAllCards_routine()
        deck.setLock(true)
        spawnedCardList = {}
        local pos = deck.getPosition()
        pos.y = pos.y + 1.75
        pos.y = pos.y + 0.2 * #deck.getObjects()
        for _ in ipairs(deck.getObjects()) do
            local drawnCard = deck.takeObject({
                position=pos,
                callback="spawnAllCards_callback",
                callback_owner=self
            })
            drawnCard.setLock(true)
--------------------------------------------------------------------------------
----------- Hack Rename Code goes here! ----------------------------------------
            runRenameCard(drawnCard)
--------------------------------------------------------------------------------
            pos.y = pos.y - 0.2
            coroutine.yield(0)
        end

        wait(2)

        spawnedCardList = reverseTable(spawnedCardList)
        for _, card in ipairs(spawnedCardList) do
            card.setLock(false)
            coroutine.yield(0)
        end

        createActivationButton()
        return 1
    end
    startLuaCoroutine(self, 'spawnAllCards_routine')
end

--Callback, assigns each card to a table
function spawnAllCards_callback(card)
    table.insert(spawnedCardList, card)
end

--Finds objects in radius of a position, accepts optional filtering function
function findInRadiusBy(pos, radius, func, debug)
    local radius = (radius or 1)
    local objList = Physics.cast({
        origin=pos, direction={0,1,0}, type=2, size={radius,radius,radius},
        max_distance=0, debug=(debug or false)
    })

    local refinedList = {}
    for _, obj in ipairs(objList) do
        if func == nil then
            table.insert(refinedList, obj.hit_object)
        else
            if func(obj.hit_object) then
                table.insert(refinedList, obj.hit_object)
            end
        end
    end

    return refinedList
end

--Coroutine delay, in seconds
function wait(time)
    local start = os.time()
    repeat coroutine.yield(0) until os.time() > start + time
end

--Reverses a table
function reverseTable(t)
    local reversedTable = {}
    local itemCount = #t
    for k, v in ipairs(t) do
        reversedTable[itemCount + 1 - k] = v
    end
    return reversedTable
end

--Spawns the button
function createActivationButton()
    self.createButton({
        click_function="click_fixDeck", function_owner=self,
        position={0,0.1,-0.82}, height=150, width=640, color={1,1,1,0},
        tooltip="Apply fix to deck."
    })
end
